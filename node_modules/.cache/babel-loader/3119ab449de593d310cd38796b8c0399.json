{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst lsSet = preference => {\n  window.localStorage.setItem(\"theme\", preference);\n};\n\nexport const useDarkLight = () => {\n  _s();\n\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      lsSet(\"dark\");\n      setTheme(\"dark\");\n    } else {\n      lsSet(\"light\");\n      setTheme(\"light\");\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(\"theme\");\n\n    if (localTheme) {\n      setTheme(localTheme);\n    }\n  }, []);\n  return [theme, toggleTheme];\n};\n\n_s(useDarkLight, \"lm84LOZxHN0YC4jzvAwAP/18Sno=\");","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/src/hooks/useDarkLight.js"],"names":["useEffect","useState","lsSet","preference","window","localStorage","setItem","useDarkLight","theme","setTheme","toggleTheme","localTheme","getItem"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAIC,UAAD,IAAgB;AAC5BC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCH,UAArC;AACD,CAFD;;AAIA,OAAO,MAAMI,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,OAAD,CAAlC;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACxB,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBN,MAAAA,KAAK,CAAC,MAAD,CAAL;AACAO,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAHD,MAGO;AACLP,MAAAA,KAAK,CAAC,OAAD,CAAL;AACAO,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GARD;;AAUAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,UAAU,GAAGP,MAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4B,OAA5B,CAAnB;;AACA,QAAID,UAAJ,EAAgB;AACdF,MAAAA,QAAQ,CAACE,UAAD,CAAR;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,CAACH,KAAD,EAAQE,WAAR,CAAP;AACD,CArBM;;GAAMH,Y","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst lsSet = (preference) => {\n  window.localStorage.setItem(\"theme\", preference);\n};\n\nexport const useDarkLight = () => {\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      lsSet(\"dark\");\n      setTheme(\"dark\");\n    } else {\n      lsSet(\"light\");\n      setTheme(\"light\");\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(\"theme\");\n    if (localTheme) {\n      setTheme(localTheme);\n    }\n  }, []);\n\n  return [theme, toggleTheme];\n};\n"]},"metadata":{},"sourceType":"module"}