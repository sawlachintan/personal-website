{"ast":null,"code":"import { __values } from 'tslib';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nvar presenceId = 0;\n\nfunction getPresenceId() {\n  var id = presenceId;\n  presenceId++;\n  return id;\n}\n\nvar PresenceChild = function (_a) {\n  var children = _a.children,\n      initial = _a.initial,\n      isPresent = _a.isPresent,\n      onExitComplete = _a.onExitComplete,\n      custom = _a.custom,\n      presenceAffectsLayout = _a.presenceAffectsLayout;\n  var presenceChildren = useConstant(newChildrenMap);\n  var id = useConstant(getPresenceId);\n  var context = useMemo(function () {\n    return {\n      id: id,\n      initial: initial,\n      isPresent: isPresent,\n      custom: custom,\n      onExitComplete: function (childId) {\n        var e_1, _a;\n\n        presenceChildren.set(childId, true);\n\n        try {\n          for (var _b = __values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var isComplete = _c.value;\n            if (!isComplete) return; // can stop searching when any is incomplete\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n\n        onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n      },\n      register: function (childId) {\n        presenceChildren.set(childId, false);\n        return function () {\n          return presenceChildren.delete(childId);\n        };\n      }\n    };\n  },\n  /**\n   * If the presence of a child affects the layout of the components around it,\n   * we want to make a new context value to ensure they get re-rendered\n   * so they can detect that layout change.\n   */\n  presenceAffectsLayout ? undefined : [isPresent]);\n  useMemo(function () {\n    presenceChildren.forEach(function (_, key) {\n      return presenceChildren.set(key, false);\n    });\n  }, [isPresent]);\n  /**\n   * If there's no `motion` components to fire exit animations, we want to remove this\n   * component immediately.\n   */\n\n  React.useEffect(function () {\n    !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n  }, [isPresent]);\n  return React.createElement(PresenceContext.Provider, {\n    value: context\n  }, children);\n};\n\nfunction newChildrenMap() {\n  return new Map();\n}\n\nexport { PresenceChild };","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs"],"names":["__values","React","useMemo","PresenceContext","useConstant","presenceId","getPresenceId","id","PresenceChild","_a","children","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","newChildrenMap","context","childId","e_1","set","_b","values","_c","next","done","isComplete","value","e_1_1","error","return","call","register","delete","undefined","forEach","_","key","useEffect","size","createElement","Provider","Map"],"mappings":"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","sourcesContent":["import { __values } from 'tslib';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            var e_1, _a;\n            presenceChildren.set(childId, true);\n            try {\n                for (var _b = __values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var isComplete = _c.value;\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n"]},"metadata":{},"sourceType":"module"}