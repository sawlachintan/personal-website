{"ast":null,"code":"var combineFunctions = function combineFunctions(a, b) {\n  return function (v) {\n    return b(a(v));\n  };\n};\n\nvar pipe = function pipe() {\n  for (var _len = arguments.length, transformers = new Array(_len), _key = 0; _key < _len; _key++) {\n    transformers[_key] = arguments[_key];\n  }\n\n  return transformers.reduce(combineFunctions);\n};\n\nexport { pipe };","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/node_modules/popmotion/dist/es/utils/pipe.mjs"],"names":["combineFunctions","a","b","v","pipe","transformers","reduce"],"mappings":"AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU,UAACC,CAAD;AAAA,WAAOD,CAAC,CAACD,CAAC,CAACE,CAAD,CAAF,CAAR;AAAA,GAAV;AAAA,CAAzB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,oCAAIC,YAAJ;AAAIA,IAAAA,YAAJ;AAAA;;AAAA,SAAqBA,YAAY,CAACC,MAAb,CAAoBN,gBAApB,CAArB;AAAA,CAAb;;AAEA,SAASI,IAAT","sourcesContent":["const combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n"]},"metadata":{},"sourceType":"module"}