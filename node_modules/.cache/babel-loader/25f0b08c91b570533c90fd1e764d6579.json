{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"getRootProps\"];\nimport { useTabContext, getTabId, getPanelId } from '../TabsUnstyled';\nimport { useButton } from '../ButtonUnstyled';\n\nvar useTab = function useTab(props) {\n  var valueProp = props.value,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      onFocus = props.onFocus;\n\n  var _useButton = useButton(props),\n      getRootPropsButton = _useButton.getRootProps,\n      otherButtonProps = _objectWithoutPropertiesLoose(_useButton, _excluded);\n\n  var context = useTabContext();\n\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n\n  var value = valueProp != null ? valueProp : 0;\n  var selected = context.value === value;\n  var selectionFollowsFocus = context.selectionFollowsFocus;\n  var a11yAttributes = {\n    role: 'tab',\n    'aria-controls': getPanelId(context, value),\n    id: getTabId(context, value),\n    'aria-selected': selected,\n    disabled: otherButtonProps.disabled\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (selectionFollowsFocus && !selected) {\n      if (onChange) {\n        onChange(event, value);\n      }\n\n      context.onSelected(event, value);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  var handleClick = function handleClick(event) {\n    if (!selected) {\n      if (onChange) {\n        onChange(event, value);\n      }\n\n      context.onSelected(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var getRootProps = function getRootProps(otherHandlers) {\n    var buttonResolvedProps = getRootPropsButton(_extends({\n      onClick: handleClick,\n      onFocus: handleFocus\n    }, otherHandlers));\n    return _extends({}, buttonResolvedProps, a11yAttributes);\n  };\n\n  return _extends({\n    getRootProps: getRootProps\n  }, otherButtonProps, {\n    selected: selected\n  });\n};\n\nexport default useTab;","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/node_modules/@mui/base/TabUnstyled/useTab.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","useTabContext","getTabId","getPanelId","useButton","useTab","props","valueProp","value","onChange","onClick","onFocus","_useButton","getRootPropsButton","getRootProps","otherButtonProps","context","Error","selected","selectionFollowsFocus","a11yAttributes","role","id","disabled","handleFocus","event","onSelected","handleClick","otherHandlers","buttonResolvedProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,IAAMC,SAAS,GAAG,CAAC,cAAD,CAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,iBAApD;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,MACSC,SADT,GAKID,KALJ,CACEE,KADF;AAAA,MAEEC,QAFF,GAKIH,KALJ,CAEEG,QAFF;AAAA,MAGEC,OAHF,GAKIJ,KALJ,CAGEI,OAHF;AAAA,MAIEC,OAJF,GAKIL,KALJ,CAIEK,OAJF;;AAOM,MAAAC,UAAU,GAAGR,SAAS,CAACE,KAAD,CAAtB;AAAA,MAEUO,kBAFV,GAGFD,UAHE,CAEJE,YAFI;AAAA,MAIAC,gBAJA,GAImBhB,6BAA6B,CAACa,UAAD,EAAaZ,SAAb,CAJhD;;AAMN,MAAMgB,OAAO,GAAGf,aAAa,EAA7B;;AAEA,MAAIe,OAAO,KAAK,IAAhB,EAAsB;AACpB,UAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED,MAAMT,KAAK,GAAGD,SAAS,IAAI,IAAb,GAAoBA,SAApB,GAAgC,CAA9C;AACA,MAAMW,QAAQ,GAAGF,OAAO,CAACR,KAAR,KAAkBA,KAAnC;AACA,MAAMW,qBAAqB,GAAGH,OAAO,CAACG,qBAAtC;AACA,MAAMC,cAAc,GAAG;AACrBC,IAAAA,IAAI,EAAE,KADe;AAErB,qBAAiBlB,UAAU,CAACa,OAAD,EAAUR,KAAV,CAFN;AAGrBc,IAAAA,EAAE,EAAEpB,QAAQ,CAACc,OAAD,EAAUR,KAAV,CAHS;AAIrB,qBAAiBU,QAJI;AAKrBK,IAAAA,QAAQ,EAAER,gBAAgB,CAACQ;AALN,GAAvB;;AAQA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,QAAIN,qBAAqB,IAAI,CAACD,QAA9B,EAAwC;AACtC,UAAIT,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACgB,KAAD,EAAQjB,KAAR,CAAR;AACD;;AAEDQ,MAAAA,OAAO,CAACU,UAAR,CAAmBD,KAAnB,EAA0BjB,KAA1B;AACD;;AAED,QAAIG,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACc,KAAD,CAAP;AACD;AACF,GAZD;;AAcA,MAAME,WAAW,GAAG,SAAdA,WAAc,CAAAF,KAAK,EAAI;AAC3B,QAAI,CAACP,QAAL,EAAe;AACb,UAAIT,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACgB,KAAD,EAAQjB,KAAR,CAAR;AACD;;AAEDQ,MAAAA,OAAO,CAACU,UAAR,CAAmBD,KAAnB,EAA0BjB,KAA1B;AACD;;AAED,QAAIE,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACe,KAAD,CAAP;AACD;AACF,GAZD;;AAcA,MAAMX,YAAY,GAAG,SAAfA,YAAe,CAAAc,aAAa,EAAI;AACpC,QAAMC,mBAAmB,GAAGhB,kBAAkB,CAACf,QAAQ,CAAC;AACtDY,MAAAA,OAAO,EAAEiB,WAD6C;AAEtDhB,MAAAA,OAAO,EAAEa;AAF6C,KAAD,EAGpDI,aAHoD,CAAT,CAA9C;AAIA,WAAO9B,QAAQ,CAAC,EAAD,EAAK+B,mBAAL,EAA0BT,cAA1B,CAAf;AACD,GAND;;AAQA,SAAOtB,QAAQ,CAAC;AACdgB,IAAAA,YAAY,EAAZA;AADc,GAAD,EAEZC,gBAFY,EAEM;AACnBG,IAAAA,QAAQ,EAARA;AADmB,GAFN,CAAf;AAKD,CAxED;;AA0EA,eAAeb,MAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getRootProps\"];\nimport { useTabContext, getTabId, getPanelId } from '../TabsUnstyled';\nimport { useButton } from '../ButtonUnstyled';\n\nconst useTab = props => {\n  const {\n    value: valueProp,\n    onChange,\n    onClick,\n    onFocus\n  } = props;\n\n  const _useButton = useButton(props),\n        {\n    getRootProps: getRootPropsButton\n  } = _useButton,\n        otherButtonProps = _objectWithoutPropertiesLoose(_useButton, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n\n  const value = valueProp != null ? valueProp : 0;\n  const selected = context.value === value;\n  const selectionFollowsFocus = context.selectionFollowsFocus;\n  const a11yAttributes = {\n    role: 'tab',\n    'aria-controls': getPanelId(context, value),\n    id: getTabId(context, value),\n    'aria-selected': selected,\n    disabled: otherButtonProps.disabled\n  };\n\n  const handleFocus = event => {\n    if (selectionFollowsFocus && !selected) {\n      if (onChange) {\n        onChange(event, value);\n      }\n\n      context.onSelected(event, value);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const handleClick = event => {\n    if (!selected) {\n      if (onChange) {\n        onChange(event, value);\n      }\n\n      context.onSelected(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const getRootProps = otherHandlers => {\n    const buttonResolvedProps = getRootPropsButton(_extends({\n      onClick: handleClick,\n      onFocus: handleFocus\n    }, otherHandlers));\n    return _extends({}, buttonResolvedProps, a11yAttributes);\n  };\n\n  return _extends({\n    getRootProps\n  }, otherButtonProps, {\n    selected\n  });\n};\n\nexport default useTab;"]},"metadata":{},"sourceType":"module"}