{"ast":null,"code":"var snap = function snap(points) {\n  if (typeof points === 'number') {\n    return function (v) {\n      return Math.round(v / points) * points;\n    };\n  } else {\n    var i = 0;\n    var numPoints = points.length;\n    return function (v) {\n      var lastDistance = Math.abs(points[0] - v);\n\n      for (i = 1; i < numPoints; i++) {\n        var point = points[i];\n        var distance = Math.abs(point - v);\n        if (distance === 0) return point;\n        if (distance > lastDistance) return points[i - 1];\n        if (i === numPoints - 1) return point;\n        lastDistance = distance;\n      }\n    };\n  }\n};\n\nexport { snap };","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/node_modules/popmotion/dist/es/utils/snap.mjs"],"names":["snap","points","v","Math","round","i","numPoints","length","lastDistance","abs","point","distance"],"mappings":"AAAA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,MAAD,EAAY;AACrB,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,WAAO,UAACC,CAAD;AAAA,aAAOC,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAGD,MAAf,IAAyBA,MAAhC;AAAA,KAAP;AACH,GAFD,MAGK;AACD,QAAII,CAAC,GAAG,CAAR;AACA,QAAMC,SAAS,GAAGL,MAAM,CAACM,MAAzB;AACA,WAAO,UAACL,CAAD,EAAO;AACV,UAAIM,YAAY,GAAGL,IAAI,CAACM,GAAL,CAASR,MAAM,CAAC,CAAD,CAAN,GAAYC,CAArB,CAAnB;;AACA,WAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,SAAhB,EAA2BD,CAAC,EAA5B,EAAgC;AAC5B,YAAMK,KAAK,GAAGT,MAAM,CAACI,CAAD,CAApB;AACA,YAAMM,QAAQ,GAAGR,IAAI,CAACM,GAAL,CAASC,KAAK,GAAGR,CAAjB,CAAjB;AACA,YAAIS,QAAQ,KAAK,CAAjB,EACI,OAAOD,KAAP;AACJ,YAAIC,QAAQ,GAAGH,YAAf,EACI,OAAOP,MAAM,CAACI,CAAC,GAAG,CAAL,CAAb;AACJ,YAAIA,CAAC,KAAKC,SAAS,GAAG,CAAtB,EACI,OAAOI,KAAP;AACJF,QAAAA,YAAY,GAAGG,QAAf;AACH;AACJ,KAbD;AAcH;AACJ,CAtBD;;AAwBA,SAASX,IAAT","sourcesContent":["const snap = (points) => {\n    if (typeof points === 'number') {\n        return (v) => Math.round(v / points) * points;\n    }\n    else {\n        let i = 0;\n        const numPoints = points.length;\n        return (v) => {\n            let lastDistance = Math.abs(points[0] - v);\n            for (i = 1; i < numPoints; i++) {\n                const point = points[i];\n                const distance = Math.abs(point - v);\n                if (distance === 0)\n                    return point;\n                if (distance > lastDistance)\n                    return points[i - 1];\n                if (i === numPoints - 1)\n                    return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\n\nexport { snap };\n"]},"metadata":{},"sourceType":"module"}