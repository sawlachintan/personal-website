{"ast":null,"code":"import _slicedToArray from\"/Users/chintansawla/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";var lsSet=function lsSet(preference){window.localStorage.setItem(\"theme\",preference);};export var useDarkLight=function useDarkLight(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];var toggleTheme=function toggleTheme(){if(theme===\"light\"){lsSet(\"dark\");setTheme(\"dark\");}else{lsSet(\"light\");setTheme(\"light\");}};useEffect(function(){var localTheme=window.localStorage.getItem(\"theme\");if(localTheme){setTheme(localTheme);}},[]);return[theme,toggleTheme];};","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/src/hooks/useDarkLight.js"],"names":["useEffect","useState","lsSet","preference","window","localStorage","setItem","useDarkLight","theme","setTheme","toggleTheme","localTheme","getItem"],"mappings":"2IAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,UAAD,CAAgB,CAC5BC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAqCH,UAArC,EACD,CAFD,CAIA,MAAO,IAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAChC,cAA0BN,QAAQ,CAAC,OAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAIF,KAAK,GAAK,OAAd,CAAuB,CACrBN,KAAK,CAAC,MAAD,CAAL,CACAO,QAAQ,CAAC,MAAD,CAAR,CACD,CAHD,IAGO,CACLP,KAAK,CAAC,OAAD,CAAL,CACAO,QAAQ,CAAC,OAAD,CAAR,CACD,CACF,CARD,CAUAT,SAAS,CAAC,UAAM,CACd,GAAMW,CAAAA,UAAU,CAAGP,MAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4B,OAA5B,CAAnB,CACA,GAAID,UAAJ,CAAgB,CACdF,QAAQ,CAACE,UAAD,CAAR,CACD,CACF,CALQ,CAKN,EALM,CAAT,CAOA,MAAO,CAACH,KAAD,CAAQE,WAAR,CAAP,CACD,CArBM","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst lsSet = (preference) => {\n  window.localStorage.setItem(\"theme\", preference);\n};\n\nexport const useDarkLight = () => {\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      lsSet(\"dark\");\n      setTheme(\"dark\");\n    } else {\n      lsSet(\"light\");\n      setTheme(\"light\");\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(\"theme\");\n    if (localTheme) {\n      setTheme(localTheme);\n    }\n  }, []);\n\n  return [theme, toggleTheme];\n};\n"]},"metadata":{},"sourceType":"module"}