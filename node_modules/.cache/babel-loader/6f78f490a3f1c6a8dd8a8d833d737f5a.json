{"ast":null,"code":"import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\nvar hsla = {\n  test: isColorString('hsl', 'hue'),\n  parse: splitColor('hue', 'saturation', 'lightness'),\n  transform: function transform(_ref) {\n    var hue = _ref.hue,\n        saturation = _ref.saturation,\n        lightness = _ref.lightness,\n        _ref$alpha = _ref.alpha,\n        alpha$1 = _ref$alpha === void 0 ? 1 : _ref$alpha;\n    return 'hsla(' + Math.round(hue) + ', ' + percent.transform(sanitize(saturation)) + ', ' + percent.transform(sanitize(lightness)) + ', ' + sanitize(alpha.transform(alpha$1)) + ')';\n  }\n};\nexport { hsla };","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/node_modules/style-value-types/dist/es/color/hsla.mjs"],"names":["alpha","percent","sanitize","isColorString","splitColor","hsla","test","parse","transform","hue","saturation","lightness","alpha$1","Math","round"],"mappings":"AAAA,SAASA,KAAT,QAAsB,sBAAtB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,aAA1C;AAEA,IAAMC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAEH,aAAa,CAAC,KAAD,EAAQ,KAAR,CADV;AAETI,EAAAA,KAAK,EAAEH,UAAU,CAAC,KAAD,EAAQ,YAAR,EAAsB,WAAtB,CAFR;AAGTI,EAAAA,SAAS,EAAE,yBAAwD;AAAA,QAArDC,GAAqD,QAArDA,GAAqD;AAAA,QAAhDC,UAAgD,QAAhDA,UAAgD;AAAA,QAApCC,SAAoC,QAApCA,SAAoC;AAAA,0BAAzBX,KAAyB;AAAA,QAAlBY,OAAkB,2BAAR,CAAQ;AAC/D,WAAQ,UACJC,IAAI,CAACC,KAAL,CAAWL,GAAX,CADI,GAEJ,IAFI,GAGJR,OAAO,CAACO,SAAR,CAAkBN,QAAQ,CAACQ,UAAD,CAA1B,CAHI,GAIJ,IAJI,GAKJT,OAAO,CAACO,SAAR,CAAkBN,QAAQ,CAACS,SAAD,CAA1B,CALI,GAMJ,IANI,GAOJT,QAAQ,CAACF,KAAK,CAACQ,SAAN,CAAgBI,OAAhB,CAAD,CAPJ,GAQJ,GARJ;AASH;AAbQ,CAAb;AAgBA,SAASP,IAAT","sourcesContent":["import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n"]},"metadata":{},"sourceType":"module"}