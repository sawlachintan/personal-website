{"ast":null,"code":"import { InternMap } from \"internmap\";\nimport identity from \"./identity.js\";\nexport default function group(values) {\n  for (var _len = arguments.length, keys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keys[_key - 1] = arguments[_key];\n  }\n\n  return nest(values, identity, identity, keys);\n}\nexport function groups(values) {\n  for (var _len2 = arguments.length, keys = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    keys[_key2 - 1] = arguments[_key2];\n  }\n\n  return nest(values, Array.from, identity, keys);\n}\n\nfunction flatten(groups, keys) {\n  for (let i = 1, n = keys.length; i < n; ++i) {\n    groups = groups.flatMap(g => g.pop().map(_ref => {\n      let [key, value] = _ref;\n      return [...g, key, value];\n    }));\n  }\n\n  return groups;\n}\n\nexport function flatGroup(values) {\n  for (var _len3 = arguments.length, keys = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    keys[_key3 - 1] = arguments[_key3];\n  }\n\n  return flatten(groups(values, ...keys), keys);\n}\nexport function flatRollup(values, reduce) {\n  for (var _len4 = arguments.length, keys = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n    keys[_key4 - 2] = arguments[_key4];\n  }\n\n  return flatten(rollups(values, reduce, ...keys), keys);\n}\nexport function rollup(values, reduce) {\n  for (var _len5 = arguments.length, keys = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    keys[_key5 - 2] = arguments[_key5];\n  }\n\n  return nest(values, identity, reduce, keys);\n}\nexport function rollups(values, reduce) {\n  for (var _len6 = arguments.length, keys = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    keys[_key6 - 2] = arguments[_key6];\n  }\n\n  return nest(values, Array.from, reduce, keys);\n}\nexport function index(values) {\n  for (var _len7 = arguments.length, keys = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n    keys[_key7 - 1] = arguments[_key7];\n  }\n\n  return nest(values, identity, unique, keys);\n}\nexport function indexes(values) {\n  for (var _len8 = arguments.length, keys = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    keys[_key8 - 1] = arguments[_key8];\n  }\n\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);else groups.set(key, [value]);\n    }\n\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n\n    return map(groups);\n  }(values, 0);\n}","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/node_modules/d3-array/src/group.js"],"names":["InternMap","identity","group","values","keys","nest","groups","Array","from","flatten","i","n","length","flatMap","g","pop","map","key","value","flatGroup","flatRollup","reduce","rollups","rollup","index","unique","indexes","Error","regroup","keyof","get","push","set"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,WAAxB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,eAAe,SAASC,KAAT,CAAeC,MAAf,EAAgC;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC7C,SAAOC,IAAI,CAACF,MAAD,EAASF,QAAT,EAAmBA,QAAnB,EAA6BG,IAA7B,CAAX;AACD;AAED,OAAO,SAASE,MAAT,CAAgBH,MAAhB,EAAiC;AAAA,qCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACtC,SAAOC,IAAI,CAACF,MAAD,EAASI,KAAK,CAACC,IAAf,EAAqBP,QAArB,EAA+BG,IAA/B,CAAX;AACD;;AAED,SAASK,OAAT,CAAiBH,MAAjB,EAAyBF,IAAzB,EAA+B;AAC7B,OAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGP,IAAI,CAACQ,MAAzB,EAAiCF,CAAC,GAAGC,CAArC,EAAwC,EAAED,CAA1C,EAA6C;AAC3CJ,IAAAA,MAAM,GAAGA,MAAM,CAACO,OAAP,CAAeC,CAAC,IAAIA,CAAC,CAACC,GAAF,GAAQC,GAAR,CAAY;AAAA,UAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;AAAA,aAAkB,CAAC,GAAGJ,CAAJ,EAAOG,GAAP,EAAYC,KAAZ,CAAlB;AAAA,KAAZ,CAApB,CAAT;AACD;;AACD,SAAOZ,MAAP;AACD;;AAED,OAAO,SAASa,SAAT,CAAmBhB,MAAnB,EAAoC;AAAA,qCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACzC,SAAOK,OAAO,CAACH,MAAM,CAACH,MAAD,EAAS,GAAGC,IAAZ,CAAP,EAA0BA,IAA1B,CAAd;AACD;AAED,OAAO,SAASgB,UAAT,CAAoBjB,MAApB,EAA4BkB,MAA5B,EAA6C;AAAA,qCAANjB,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAClD,SAAOK,OAAO,CAACa,OAAO,CAACnB,MAAD,EAASkB,MAAT,EAAiB,GAAGjB,IAApB,CAAR,EAAmCA,IAAnC,CAAd;AACD;AAED,OAAO,SAASmB,MAAT,CAAgBpB,MAAhB,EAAwBkB,MAAxB,EAAyC;AAAA,qCAANjB,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC9C,SAAOC,IAAI,CAACF,MAAD,EAASF,QAAT,EAAmBoB,MAAnB,EAA2BjB,IAA3B,CAAX;AACD;AAED,OAAO,SAASkB,OAAT,CAAiBnB,MAAjB,EAAyBkB,MAAzB,EAA0C;AAAA,qCAANjB,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC/C,SAAOC,IAAI,CAACF,MAAD,EAASI,KAAK,CAACC,IAAf,EAAqBa,MAArB,EAA6BjB,IAA7B,CAAX;AACD;AAED,OAAO,SAASoB,KAAT,CAAerB,MAAf,EAAgC;AAAA,qCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACrC,SAAOC,IAAI,CAACF,MAAD,EAASF,QAAT,EAAmBwB,MAAnB,EAA2BrB,IAA3B,CAAX;AACD;AAED,OAAO,SAASsB,OAAT,CAAiBvB,MAAjB,EAAkC;AAAA,qCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACvC,SAAOC,IAAI,CAACF,MAAD,EAASI,KAAK,CAACC,IAAf,EAAqBiB,MAArB,EAA6BrB,IAA7B,CAAX;AACD;;AAED,SAASqB,MAAT,CAAgBtB,MAAhB,EAAwB;AACtB,MAAIA,MAAM,CAACS,MAAP,KAAkB,CAAtB,EAAyB,MAAM,IAAIe,KAAJ,CAAU,eAAV,CAAN;AACzB,SAAOxB,MAAM,CAAC,CAAD,CAAb;AACD;;AAED,SAASE,IAAT,CAAcF,MAAd,EAAsBa,GAAtB,EAA2BK,MAA3B,EAAmCjB,IAAnC,EAAyC;AACvC,SAAQ,SAASwB,OAAT,CAAiBzB,MAAjB,EAAyBO,CAAzB,EAA4B;AAClC,QAAIA,CAAC,IAAIN,IAAI,CAACQ,MAAd,EAAsB,OAAOS,MAAM,CAAClB,MAAD,CAAb;AACtB,UAAMG,MAAM,GAAG,IAAIN,SAAJ,EAAf;AACA,UAAM6B,KAAK,GAAGzB,IAAI,CAACM,CAAC,EAAF,CAAlB;AACA,QAAIc,KAAK,GAAG,CAAC,CAAb;;AACA,SAAK,MAAMN,KAAX,IAAoBf,MAApB,EAA4B;AAC1B,YAAMc,GAAG,GAAGY,KAAK,CAACX,KAAD,EAAQ,EAAEM,KAAV,EAAiBrB,MAAjB,CAAjB;AACA,YAAMD,KAAK,GAAGI,MAAM,CAACwB,GAAP,CAAWb,GAAX,CAAd;AACA,UAAIf,KAAJ,EAAWA,KAAK,CAAC6B,IAAN,CAAWb,KAAX,EAAX,KACKZ,MAAM,CAAC0B,GAAP,CAAWf,GAAX,EAAgB,CAACC,KAAD,CAAhB;AACN;;AACD,SAAK,MAAM,CAACD,GAAD,EAAMd,MAAN,CAAX,IAA4BG,MAA5B,EAAoC;AAClCA,MAAAA,MAAM,CAAC0B,GAAP,CAAWf,GAAX,EAAgBW,OAAO,CAACzB,MAAD,EAASO,CAAT,CAAvB;AACD;;AACD,WAAOM,GAAG,CAACV,MAAD,CAAV;AACD,GAfM,CAeJH,MAfI,EAeI,CAfJ,CAAP;AAgBD","sourcesContent":["import {InternMap} from \"internmap\";\nimport identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nfunction flatten(groups, keys) {\n  for (let i = 1, n = keys.length; i < n; ++i) {\n    groups = groups.flatMap(g => g.pop().map(([key, value]) => [...g, key, value]));\n  }\n  return groups;\n}\n\nexport function flatGroup(values, ...keys) {\n  return flatten(groups(values, ...keys), keys);\n}\n\nexport function flatRollup(values, reduce, ...keys) {\n  return flatten(rollups(values, reduce, ...keys), keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n"]},"metadata":{},"sourceType":"module"}