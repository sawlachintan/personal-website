{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nconst accentColors = [\"#757575\", //colorblind friendly\n\"#d50000\", //red\n\"#f57c00\", //orange\n\"#e91e63\", //pink\n\"#36B06F\", //yellow\n\"#6250F4\", //purple\n\"#2979ff\", // blue\n\"#E7B92F\" // green\n];\n\nconst lsSet = preference => {\n  window.localStorage.setItem(\"accent\", preference);\n};\n\nexport const useAccentColor = () => {\n  _s();\n\n  const [accent, setAccent] = useState(accentColors[0]);\n\n  const toggleAccent = () => {\n    const localAccent = window.localStorage.getItem(\"accent\");\n\n    if (localAccent) {\n      const currIndex = accentColors.indexOf(localAccent);\n      const newIndex = (currIndex + 1) % accentColors.length;\n      lsSet(accentColors[newIndex]);\n      setAccent(accentColors[newIndex]);\n    } else {\n      lsSet(accentColors[1]);\n      setAccent(accentColors[1]);\n    }\n  };\n\n  useEffect(() => {\n    const localAccent = window.localStorage.getItem(\"accent\");\n\n    if (localAccent) {\n      setAccent(localAccent);\n    }\n  }, []);\n  return [accent, toggleAccent];\n};\n\n_s(useAccentColor, \"QfvL+lzPWiProHvRgFUWZiEduO8=\");","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/src/hooks/useAccentColor.js"],"names":["useEffect","useState","accentColors","lsSet","preference","window","localStorage","setItem","useAccentColor","accent","setAccent","toggleAccent","localAccent","getItem","currIndex","indexOf","newIndex","length"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,YAAY,GAAG,CACnB,SADmB,EACR;AACX,SAFmB,EAER;AACX,SAHmB,EAGR;AACX,SAJmB,EAIR;AACX,SALmB,EAKR;AACX,SANmB,EAMR;AACX,SAPmB,EAOR;AACX,SARmB,CAQR;AARQ,CAArB;;AAWA,MAAMC,KAAK,GAAIC,UAAD,IAAgB;AAC5BC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsCH,UAAtC;AACD,CAFD;;AAIA,OAAO,MAAMI,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACC,YAAY,CAAC,CAAD,CAAb,CAApC;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACzB,UAAMC,WAAW,GAAGP,MAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4B,QAA5B,CAApB;;AACA,QAAID,WAAJ,EAAiB;AACf,YAAME,SAAS,GAAGZ,YAAY,CAACa,OAAb,CAAqBH,WAArB,CAAlB;AACA,YAAMI,QAAQ,GAAG,CAACF,SAAS,GAAG,CAAb,IAAkBZ,YAAY,CAACe,MAAhD;AACAd,MAAAA,KAAK,CAACD,YAAY,CAACc,QAAD,CAAb,CAAL;AACAN,MAAAA,SAAS,CAACR,YAAY,CAACc,QAAD,CAAb,CAAT;AACD,KALD,MAKO;AACLb,MAAAA,KAAK,CAACD,YAAY,CAAC,CAAD,CAAb,CAAL;AACAQ,MAAAA,SAAS,CAACR,YAAY,CAAC,CAAD,CAAb,CAAT;AACD;AACF,GAXD;;AAaAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,WAAW,GAAGP,MAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4B,QAA5B,CAApB;;AACA,QAAID,WAAJ,EAAiB;AACfF,MAAAA,SAAS,CAACE,WAAD,CAAT;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,CAACH,MAAD,EAASE,YAAT,CAAP;AACD,CAxBM;;GAAMH,c","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst accentColors = [\n  \"#757575\", //colorblind friendly\n  \"#d50000\", //red\n  \"#f57c00\", //orange\n  \"#e91e63\", //pink\n  \"#36B06F\", //yellow\n  \"#6250F4\", //purple\n  \"#2979ff\", // blue\n  \"#E7B92F\", // green\n];\n\nconst lsSet = (preference) => {\n  window.localStorage.setItem(\"accent\", preference);\n};\n\nexport const useAccentColor = () => {\n  const [accent, setAccent] = useState(accentColors[0]);\n\n  const toggleAccent = () => {\n    const localAccent = window.localStorage.getItem(\"accent\");\n    if (localAccent) {\n      const currIndex = accentColors.indexOf(localAccent);\n      const newIndex = (currIndex + 1) % accentColors.length;\n      lsSet(accentColors[newIndex]);\n      setAccent(accentColors[newIndex]);\n    } else {\n      lsSet(accentColors[1]);\n      setAccent(accentColors[1]);\n    }\n  };\n\n  useEffect(() => {\n    const localAccent = window.localStorage.getItem(\"accent\");\n    if (localAccent) {\n      setAccent(localAccent);\n    }\n  }, []);\n\n  return [accent, toggleAccent];\n};\n"]},"metadata":{},"sourceType":"module"}