{"ast":null,"code":"import { isString } from '../utils.mjs';\n\nvar createUnitType = function createUnitType(unit) {\n  return {\n    test: function test(v) {\n      return isString(v) && v.endsWith(unit) && v.split(' ').length === 1;\n    },\n    parse: parseFloat,\n    transform: function transform(v) {\n      return \"\".concat(v).concat(unit);\n    }\n  };\n};\n\nvar degrees = createUnitType('deg');\nvar percent = createUnitType('%');\nvar px = createUnitType('px');\nvar vh = createUnitType('vh');\nvar vw = createUnitType('vw');\nvar progressPercentage = Object.assign(Object.assign({}, percent), {\n  parse: function parse(v) {\n    return percent.parse(v) / 100;\n  },\n  transform: function transform(v) {\n    return percent.transform(v * 100);\n  }\n});\nexport { degrees, percent, progressPercentage, px, vh, vw };","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/node_modules/style-value-types/dist/es/numbers/units.mjs"],"names":["isString","createUnitType","unit","test","v","endsWith","split","length","parse","parseFloat","transform","degrees","percent","px","vh","vw","progressPercentage","Object","assign"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,SAAW;AAC9BC,IAAAA,IAAI,EAAE,cAACC,CAAD;AAAA,aAAOJ,QAAQ,CAACI,CAAD,CAAR,IAAeA,CAAC,CAACC,QAAF,CAAWH,IAAX,CAAf,IAAmCE,CAAC,CAACE,KAAF,CAAQ,GAAR,EAAaC,MAAb,KAAwB,CAAlE;AAAA,KADwB;AAE9BC,IAAAA,KAAK,EAAEC,UAFuB;AAG9BC,IAAAA,SAAS,EAAE,mBAACN,CAAD;AAAA,uBAAUA,CAAV,SAAcF,IAAd;AAAA;AAHmB,GAAX;AAAA,CAAvB;;AAKA,IAAMS,OAAO,GAAGV,cAAc,CAAC,KAAD,CAA9B;AACA,IAAMW,OAAO,GAAGX,cAAc,CAAC,GAAD,CAA9B;AACA,IAAMY,EAAE,GAAGZ,cAAc,CAAC,IAAD,CAAzB;AACA,IAAMa,EAAE,GAAGb,cAAc,CAAC,IAAD,CAAzB;AACA,IAAMc,EAAE,GAAGd,cAAc,CAAC,IAAD,CAAzB;AACA,IAAMe,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,OAAlB,CAAd,EAA0C;AAAEJ,EAAAA,KAAK,EAAE,eAACJ,CAAD;AAAA,WAAOQ,OAAO,CAACJ,KAAR,CAAcJ,CAAd,IAAmB,GAA1B;AAAA,GAAT;AAAwCM,EAAAA,SAAS,EAAE,mBAACN,CAAD;AAAA,WAAOQ,OAAO,CAACF,SAAR,CAAkBN,CAAC,GAAG,GAAtB,CAAP;AAAA;AAAnD,CAA1C,CAA3B;AAEA,SAASO,OAAT,EAAkBC,OAAlB,EAA2BI,kBAA3B,EAA+CH,EAA/C,EAAmDC,EAAnD,EAAuDC,EAAvD","sourcesContent":["import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n"]},"metadata":{},"sourceType":"module"}