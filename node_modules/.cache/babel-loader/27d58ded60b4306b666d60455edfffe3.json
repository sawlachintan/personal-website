{"ast":null,"code":"import { __read } from 'tslib';\nimport sync from 'framesync';\nimport { useRef, useState, useCallback } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.mjs';\n\nfunction useForceUpdate() {\n  var isUnmountingRef = useRef(false);\n\n  var _a = __read(useState(0), 2),\n      forcedRenderCount = _a[0],\n      setForcedRenderCount = _a[1];\n\n  useUnmountEffect(function () {\n    return isUnmountingRef.current = true;\n  });\n  var forceRender = useCallback(function () {\n    !isUnmountingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n  /**\n   * Defer this to the end of the next animation frame in case there are multiple\n   * synchronous calls.\n   */\n\n  var deferredForceRender = useCallback(function () {\n    return sync.postRender(forceRender);\n  }, [forceRender]);\n  return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/node_modules/framer-motion/dist/es/utils/use-force-update.mjs"],"names":["__read","sync","useRef","useState","useCallback","useUnmountEffect","useForceUpdate","isUnmountingRef","_a","forcedRenderCount","setForcedRenderCount","current","forceRender","deferredForceRender","postRender"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;AAEA,SAASC,cAAT,GAA0B;AACtB,MAAIC,eAAe,GAAGL,MAAM,CAAC,KAAD,CAA5B;;AACA,MAAIM,EAAE,GAAGR,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,EAAc,CAAd,CAAf;AAAA,MAAiCM,iBAAiB,GAAGD,EAAE,CAAC,CAAD,CAAvD;AAAA,MAA4DE,oBAAoB,GAAGF,EAAE,CAAC,CAAD,CAArF;;AACAH,EAAAA,gBAAgB,CAAC,YAAY;AAAE,WAAQE,eAAe,CAACI,OAAhB,GAA0B,IAAlC;AAA0C,GAAzD,CAAhB;AACA,MAAIC,WAAW,GAAGR,WAAW,CAAC,YAAY;AACtC,KAACG,eAAe,CAACI,OAAjB,IAA4BD,oBAAoB,CAACD,iBAAiB,GAAG,CAArB,CAAhD;AACH,GAF4B,EAE1B,CAACA,iBAAD,CAF0B,CAA7B;AAGA;AACJ;AACA;AACA;;AACI,MAAII,mBAAmB,GAAGT,WAAW,CAAC,YAAY;AAAE,WAAOH,IAAI,CAACa,UAAL,CAAgBF,WAAhB,CAAP;AAAsC,GAArD,EAAuD,CAACA,WAAD,CAAvD,CAArC;AACA,SAAO,CAACC,mBAAD,EAAsBJ,iBAAtB,CAAP;AACH;;AAED,SAASH,cAAT","sourcesContent":["import { __read } from 'tslib';\nimport sync from 'framesync';\nimport { useRef, useState, useCallback } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.mjs';\n\nfunction useForceUpdate() {\n    var isUnmountingRef = useRef(false);\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (isUnmountingRef.current = true); });\n    var forceRender = useCallback(function () {\n        !isUnmountingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    var deferredForceRender = useCallback(function () { return sync.postRender(forceRender); }, [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n"]},"metadata":{},"sourceType":"module"}