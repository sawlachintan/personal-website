{"ast":null,"code":"import _toConsumableArray from \"/Users/chintansawla/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\n/**\n * The benefit of this function is to help developers get CSS var from theme without specifying the whole variable\n * and they does not need to remember the prefix (defined once).\n */\nexport default function createGetCssVar() {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  function appendVar() {\n    for (var _len = arguments.length, vars = new Array(_len), _key = 0; _key < _len; _key++) {\n      vars[_key] = arguments[_key];\n    }\n\n    if (!vars.length) {\n      return '';\n    }\n\n    return \", var(--\".concat(prefix ? \"\".concat(prefix, \"-\") : '').concat(vars[0]).concat(appendVar.apply(void 0, _toConsumableArray(vars.slice(1))), \")\");\n  } // AdditionalVars makes `getCssVar` less strict, so it can be use like this `getCssVar('non-mui-variable')` without type error.\n\n\n  var getCssVar = function getCssVar(field) {\n    for (var _len2 = arguments.length, vars = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      vars[_key2 - 1] = arguments[_key2];\n    }\n\n    return \"var(--\".concat(prefix ? \"\".concat(prefix, \"-\") : '').concat(field).concat(appendVar.apply(void 0, vars), \")\");\n  };\n\n  return getCssVar;\n}","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/node_modules/@mui/system/esm/cssVars/createGetCssVar.js"],"names":["createGetCssVar","prefix","appendVar","vars","length","slice","getCssVar","field"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,eAAe,SAASA,eAAT,GAAsC;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AACnD,WAASC,SAAT,GAA4B;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAC1B,QAAI,CAACA,IAAI,CAACC,MAAV,EAAkB;AAChB,aAAO,EAAP;AACD;;AAED,6BAAkBH,MAAM,aAAMA,MAAN,SAAkB,EAA1C,SAA+CE,IAAI,CAAC,CAAD,CAAnD,SAAyDD,SAAS,MAAT,4BAAaC,IAAI,CAACE,KAAL,CAAW,CAAX,CAAb,EAAzD;AACD,GAPkD,CAOjD;;;AAGF,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAoB;AAAA,uCAATJ,IAAS;AAATA,MAAAA,IAAS;AAAA;;AACpC,2BAAgBF,MAAM,aAAMA,MAAN,SAAkB,EAAxC,SAA6CM,KAA7C,SAAqDL,SAAS,MAAT,SAAaC,IAAb,CAArD;AACD,GAFD;;AAIA,SAAOG,SAAP;AACD","sourcesContent":["/**\n * The benefit of this function is to help developers get CSS var from theme without specifying the whole variable\n * and they does not need to remember the prefix (defined once).\n */\nexport default function createGetCssVar(prefix = '') {\n  function appendVar(...vars) {\n    if (!vars.length) {\n      return '';\n    }\n\n    return `, var(--${prefix ? `${prefix}-` : ''}${vars[0]}${appendVar(...vars.slice(1))})`;\n  } // AdditionalVars makes `getCssVar` less strict, so it can be use like this `getCssVar('non-mui-variable')` without type error.\n\n\n  const getCssVar = (field, ...vars) => {\n    return `var(--${prefix ? `${prefix}-` : ''}${field}${appendVar(...vars)})`;\n  };\n\n  return getCssVar;\n}"]},"metadata":{},"sourceType":"module"}