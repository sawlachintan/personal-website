{"ast":null,"code":"import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { getFrameData } from 'framesync';\n\nfunction inertia(_ref) {\n  var _ref$from = _ref.from,\n      from = _ref$from === void 0 ? 0 : _ref$from,\n      _ref$velocity = _ref.velocity,\n      velocity = _ref$velocity === void 0 ? 0 : _ref$velocity,\n      min = _ref.min,\n      max = _ref.max,\n      _ref$power = _ref.power,\n      power = _ref$power === void 0 ? 0.8 : _ref$power,\n      _ref$timeConstant = _ref.timeConstant,\n      timeConstant = _ref$timeConstant === void 0 ? 750 : _ref$timeConstant,\n      _ref$bounceStiffness = _ref.bounceStiffness,\n      bounceStiffness = _ref$bounceStiffness === void 0 ? 500 : _ref$bounceStiffness,\n      _ref$bounceDamping = _ref.bounceDamping,\n      bounceDamping = _ref$bounceDamping === void 0 ? 10 : _ref$bounceDamping,\n      _ref$restDelta = _ref.restDelta,\n      restDelta = _ref$restDelta === void 0 ? 1 : _ref$restDelta,\n      modifyTarget = _ref.modifyTarget,\n      driver = _ref.driver,\n      _onUpdate = _ref.onUpdate,\n      onComplete = _ref.onComplete,\n      onStop = _ref.onStop;\n  var currentAnimation;\n\n  function isOutOfBounds(v) {\n    return min !== undefined && v < min || max !== undefined && v > max;\n  }\n\n  function boundaryNearest(v) {\n    if (min === undefined) return max;\n    if (max === undefined) return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n\n  function startAnimation(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(Object.assign(Object.assign({}, options), {\n      driver: driver,\n      onUpdate: function onUpdate(v) {\n        var _a;\n\n        _onUpdate === null || _onUpdate === void 0 ? void 0 : _onUpdate(v);\n        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n      },\n      onComplete: onComplete,\n      onStop: onStop\n    }));\n  }\n\n  function startSpring(options) {\n    startAnimation(Object.assign({\n      type: \"spring\",\n      stiffness: bounceStiffness,\n      damping: bounceDamping,\n      restDelta: restDelta\n    }, options));\n  }\n\n  if (isOutOfBounds(from)) {\n    startSpring({\n      from: from,\n      velocity: velocity,\n      to: boundaryNearest(from)\n    });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n    var boundary = boundaryNearest(target);\n    var heading = boundary === min ? -1 : 1;\n    var prev;\n    var current;\n\n    var checkBoundary = function checkBoundary(v) {\n      prev = current;\n      current = v;\n      velocity = velocityPerSecond(v - prev, getFrameData().delta);\n\n      if (heading === 1 && v > boundary || heading === -1 && v < boundary) {\n        startSpring({\n          from: v,\n          to: boundary,\n          velocity: velocity\n        });\n      }\n    };\n\n    startAnimation({\n      type: \"decay\",\n      from: from,\n      velocity: velocity,\n      timeConstant: timeConstant,\n      power: power,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n    });\n  }\n\n  return {\n    stop: function stop() {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\n\nexport { inertia };","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/personal-website/node_modules/popmotion/dist/es/animations/inertia.mjs"],"names":["animate","velocityPerSecond","getFrameData","inertia","from","velocity","min","max","power","timeConstant","bounceStiffness","bounceDamping","restDelta","modifyTarget","driver","onUpdate","onComplete","onStop","currentAnimation","isOutOfBounds","v","undefined","boundaryNearest","Math","abs","startAnimation","options","stop","Object","assign","_a","call","startSpring","type","stiffness","damping","to","target","boundary","heading","prev","current","checkBoundary","delta"],"mappings":"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","sourcesContent":["import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { getFrameData } from 'framesync';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(Object.assign(Object.assign({}, options), { driver, onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete,\n            onStop }));\n    }\n    function startSpring(options) {\n        startAnimation(Object.assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n"]},"metadata":{},"sourceType":"module"}